{"ast":null,"code":"var _jsxFileName = \"/home/xmh/Projects/Xpaste/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\n\n// Replace with your actual local IP address\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = 'http://192.168.1.X:3001';\nconst socket = io(SERVER_URL);\nconst App = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    socket.on('messageReceived', msg => {\n      setMessages(prevMessages => [...prevMessages, msg]);\n    });\n    return () => {\n      socket.off('messageReceived');\n    };\n  }, []);\n  const sendMessage = () => {\n    if (message.trim()) {\n      const newMessage = {\n        text: message\n      };\n      socket.emit('sendMessage', newMessage);\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Real-Time Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message\",\n          children: msg.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && sendMessage(),\n          placeholder: \"Type your message here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"WDgp24k/FdZO6Mwa4GS0i45C6ek=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","SERVER_URL","socket","App","_s","message","setMessage","messages","setMessages","on","msg","prevMessages","off","sendMessage","trim","newMessage","text","emit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","value","onChange","e","target","onKeyPress","key","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/xmh/Projects/Xpaste/client/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\n\n// Replace with your actual local IP address\nconst SERVER_URL = 'http://192.168.1.X:3001';\nconst socket = io(SERVER_URL);\n\nconst App: React.FC = () => {\n    const [message, setMessage] = useState<string>('');\n    const [messages, setMessages] = useState<{ text: string }[]>([]);\n\n    useEffect(() => {\n        socket.on('messageReceived', (msg: { text: string }) => {\n            setMessages((prevMessages) => [...prevMessages, msg]);\n        });\n\n        return () => {\n            socket.off('messageReceived');\n        };\n    }, []);\n\n    const sendMessage = () => {\n        if (message.trim()) {\n            const newMessage = { text: message };\n            socket.emit('sendMessage', newMessage);\n            setMessage('');\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Real-Time Chat</h1>\n            <div className=\"chat-container\">\n                <div className=\"messages\">\n                    {messages.map((msg, index) => (\n                        <p key={index} className=\"message\">{msg.text}</p>\n                    ))}\n                </div>\n                <div className=\"input-area\">\n                    <input\n                        type=\"text\"\n                        value={message}\n                        onChange={(e) => setMessage(e.target.value)}\n                        onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\n                        placeholder=\"Type your message here...\"\n                    />\n                    <button onClick={sendMessage}>Send</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}